name: Build and Push to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.29.2'
        id: install

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::621486623993:role/github-actions-ecr-role
          aws-region: eu-north-1

      - name: Show AWS identity
        run: aws sts get-caller-identity

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --build-arg APP_ENV_FILE=app.env -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Update kube config
        run: |
          mkdir -p $HOME/.kube
          aws eks update-kubeconfig --name simple-cluster --region eu-north-1 --kubeconfig $HOME/.kube/config\

      - name: Inspect generated kubeconfig
        run: cat $HOME/.kube/config

      - name: Test aws eks get-token manually
        run: |
          aws eks get-token --cluster-name simple-cluster
        env:
          AWS_REGION: eu-north-1
          AWS_DEFAULT_REGION: eu-north-1
          AWS_ACCESS_KEY_ID: ${{ steps.aws-creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.aws-creds.outputs.aws-secret-access-key }}
          AWS_SESSION_TOKEN: ${{ steps.aws-creds.outputs.aws-session-token }}

      - name: Debug kubeconfig
        run: |
          echo "=== kubectl config view ==="
          kubectl config view
          echo "=== kubectl get nodes ==="
          kubectl get nodes || echo "Could not access cluster"
        env:
          AWS_REGION: eu-north-1
          AWS_DEFAULT_REGION: eu-north-1
          AWS_ACCESS_KEY_ID: ${{ steps.aws-creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.aws-creds.outputs.aws-secret-access-key }}
          AWS_SESSION_TOKEN: ${{ steps.aws-creds.outputs.aws-session-token }}

      - name: Deploy image to Amazon EKS
        env:
          AWS_REGION: eu-north-1
          AWS_DEFAULT_REGION: eu-north-1
          AWS_ACCESS_KEY_ID: ${{ steps.aws-creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.aws-creds.outputs.aws-secret-access-key }}
          AWS_SESSION_TOKEN: ${{ steps.aws-creds.outputs.aws-session-token }}
        run: |
          kubectl apply --kubeconfig $HOME/.kube/config -f eks/aws-auth.yaml
          kubectl apply -f eks/deployment.yaml
          kubectl apply -f eks/service.yaml
          kubectl apply -f eks/issuer.yaml
          kubectl apply -f eks/ingress.yaml
